{"version":3,"file":"component---src-pages-document-tsx-d2d82be3863f56773958.js","mappings":"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","sources":["webpack://power-reader/./src/components/Link.tsx","webpack://power-reader/./src/components/TextArea.tsx","webpack://power-reader/./src/pages/document.tsx","webpack://power-reader/./src/utils/document.tsx"],"sourcesContent":["import React from 'react';\nimport { Link as RouterLink, GatsbyLinkProps } from 'gatsby';\nimport { useStyles, Variant } from './actionStyles';\n\ninterface Props extends Omit<GatsbyLinkProps<{}>, 'ref'> {\n  variant?: Variant;\n}\n\n\nexport default function Link(props: Props) {\n  const classes = useStyles({ ...props });\n\n  const {\n    variant,\n    ...passThroughProps\n  } = props;\n\n  return (\n    <RouterLink\n      {...passThroughProps}\n      className={`${classes.button} ${props.className}`}\n    >\n      {props.children}\n    </RouterLink>\n  )\n}\n","import React, { useContext } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { FormContentContext, FormUpdateContext } from '../contexts/Form';\n\ninterface Props extends React.HTMLProps<HTMLTextAreaElement> {\n  label: string;\n}\n\nconst useStyles = createUseStyles({\n  label: {\n    color: '#ffffff',\n    display: 'block',\n    margin: [0, 0, 8]\n  },\n  input: {\n    backdropFilter: 'blur(2px)',\n    background: '#ffffff0a',\n    border: {\n      color: '#ffffff33',\n      width: [0, 0, 2, 0]\n    },\n    color: '#ffffff',\n    display: 'block',\n    fontSize: 16,\n    fontFamily: 'Helvetica, Arial, sans-serif',\n    height: 580,\n    margin: [0, 0, 32],\n    maxWidth: 640,\n    padding: 8,\n    resize: 'none',\n    transition: 'border-color 150ms ease-in-out',\n    width: '100%',\n\n    '&:hover': {\n      border: {\n        color: '#ffffff77'\n      }\n    },\n\n    '&:active, &:focus': {\n      border: {\n        color: '#ffffffaa'\n      },\n      outline: 'none'\n    }\n  }\n});\n\nexport default function Input(props: Props) {\n  const classes = useStyles();\n\n  const content = useContext(FormContentContext);\n  const update = useContext(FormUpdateContext);\n\n  if (!props.name) {\n    throw new Error(\"Name is required for an input\");\n  }\n\n  const value = content.find(({ id }) => id === props.name)?.value || '';\n\n  return (\n    <>\n      <label className={classes.label} htmlFor={props.name}>{ props.label }:</label>\n      <textarea\n        {...props}\n        className={`${classes.input} ${props.className}`}\n        value={value}\n        onInput={e => update(props.name!, e.currentTarget.value)}\n      />\n    </>\n  )\n}\n","import React from 'react';\nimport { navigate } from 'gatsby';\nimport { useRecoilState } from 'recoil';\nimport { v4 as uuidv4 } from 'uuid';\nimport { userState } from '../state/user';\nimport { Routes } from '../utils/routes';\nimport { getDocument } from '../utils/document';\nimport Button from '../components/Button';\nimport { Variant } from '../components/actionStyles';\nimport Form from '../components/Form';\nimport Heading, { Tag } from '../components/Heading';\nimport Input from '../components/Input';\nimport Link from '../components/Link';\nimport StandardPage from '../components/StandardPage';\nimport TextArea from '../components/TextArea';\n\nexport default function CreateDocument() {\n  const [user, setUser] = useRecoilState(userState);\n\n  const existingDocument = getDocument(user!);\n\n  function onSubmit(data: any) {\n    const newDocument = {\n      id: existingDocument?.id || uuidv4(),\n      name: data.name,\n      content: data.content,\n      readerPosition: 0\n    }\n\n    if (existingDocument) {\n      const updateDocuments = [...user!.documents];\n      updateDocuments[updateDocuments.indexOf(existingDocument)] = newDocument;\n\n      setUser({\n        ...user!,\n        documents: updateDocuments\n      });\n    } else {\n      setUser({\n        ...user!,\n        documents: [...user!.documents, newDocument]\n      });\n    }\n\n    navigate(Routes.Dashboard);\n  }\n\n  return (\n    <StandardPage>\n      <Form initialState={existingDocument ? { name: existingDocument.name, content: existingDocument.content } : null} onSubmit={onSubmit}>\n        <Heading tag={Tag.H1}>{ existingDocument ? 'Edit document' : 'New document' }</Heading>\n        <Input label=\"Name\" name=\"name\" required />\n        <TextArea label=\"Content\" name=\"content\" type=\"textarea\" required />\n        <Button variant={Variant.Tertiary}>{ existingDocument ? 'Save' : 'Create' }</Button>\n        <Link to={Routes.Dashboard} variant={Variant.Tertiary}>Cancel</Link>\n      </Form>\n    </StandardPage>\n  );\n}\n","import { User } from '../state/user';\n\nexport const LETTERS_PER_SECOND = 60;\n\nfunction snipFirstLine(document: string, maxLineLength: number): string[] {\n  for (let i = maxLineLength; i >= 0; i--) {\n    const finishedDocument = !document[i];\n    const unbrokenWordLongerThanMaxLength = i === 0;\n\n    if (finishedDocument) {\n      return [document.trim()];\n    } else if (unbrokenWordLongerThanMaxLength) {\n      return [document.substring(0, maxLineLength).trim(), ...snipFirstLine(document.substring(maxLineLength), maxLineLength)];\n    } else if (document[i] === ' ') {\n      return [document.substring(0, i).trim(), ...snipFirstLine(document.substring(i), maxLineLength)];\n    }\n  }\n\n  return [];\n}\n\nexport function documentToLines(document: string, maxLineLength: number = 60) {\n  return snipFirstLine(document, maxLineLength);\n}\n\ntype ActiveLines = {\n  activeLines: string[];\n  lineProgress: number;\n}\n\nexport function getActiveLines(lines: string[], readerPosition: number): ActiveLines {\n  let scanPosition = 0;\n  for (let i = 0; i < lines.length; i++) {\n    scanPosition += lines[i].length + 1; // The 1 is for the space at the end of the line\n    const foundPosition = scanPosition >= readerPosition;\n    if (foundPosition) {\n      const lineStart = scanPosition - (lines[i].length + 1);\n      const lineEnd = scanPosition;\n      const lineLength = lineEnd - lineStart;\n      const linePosition = readerPosition - lineStart;\n      return {\n        activeLines: [lines[i - 1] || ' ', lines[i], lines[i + 1] || ' '],\n        lineProgress: (linePosition / lineLength) * 100\n      };\n    }\n  }\n  throw new Error(`Couldn't find reading position in document`);\n}\n\nexport function getDocument(user: User) {\n  if (typeof window !== 'undefined') {\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    return user.documents.find(document => document.id === urlParams.get('id'))\n  }\n\n  return null;\n}\n"],"names":["Link","props","classes","useStyles","passThroughProps","variant","React","RouterLink","className","button","children","createUseStyles","label","color","display","margin","input","backdropFilter","background","border","width","fontSize","fontFamily","height","maxWidth","padding","resize","transition","outline","Input","content","useContext","FormContentContext","update","FormUpdateContext","name","Error","value","find","id","htmlFor","onInput","e","currentTarget","CreateDocument","useRecoilState","userState","user","setUser","existingDocument","getDocument","StandardPage","Form","initialState","onSubmit","data","newDocument","uuidv4","readerPosition","updateDocuments","documents","indexOf","navigate","Routes","Heading","tag","Tag","required","TextArea","type","Button","Variant","to","LETTERS_PER_SECOND","snipFirstLine","document","maxLineLength","i","unbrokenWordLongerThanMaxLength","trim","substring","documentToLines","getActiveLines","lines","scanPosition","length","lineStart","lineLength","linePosition","activeLines","lineProgress","window","queryString","location","search","urlParams","URLSearchParams","get"],"sourceRoot":""}