{"version":3,"file":"component---src-pages-reader-tsx-2da8f58a6ce1be738fde.js","mappings":"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","sources":["webpack://power-reader/./src/components/PlayerControls.tsx","webpack://power-reader/./src/components/ReadZone.tsx","webpack://power-reader/./src/components/readZoneEffect.tsx","webpack://power-reader/./src/components/ReadZoneSingleWord.tsx","webpack://power-reader/./src/pages/reader.tsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport { SwitchTransition, CSSTransition } from 'react-transition-group';\nimport { FiFastForward, FiGrid, FiPlay, FiPause, FiRewind, FiRotateCcw } from 'react-icons/fi';\nimport { createUseStyles } from 'react-jss';\nimport { Routes } from '../utils/routes';\nimport { Mode, useUserState } from '../state/user';\n\ntype Props = {\n  isPlaying: boolean;\n  onRewind: () => void;\n  onPlayPause: () => void;\n  onFastForward: () => void;\n  onRestart: () => void;\n}\n\nconst TRANSITION_TIME = 150;\n\nconst buttonCss = {\n  backdropFilter: 'blur(2px)',\n    background: '#ffffffee',\n    border: 0,\n    borderRadius: 8,\n    boxShadow: '3px 3px 10px #00000011',\n    color: '#333',\n    cursor: 'pointer',\n    display: 'inline-block',\n    fontSize: 28,\n    margin: [0, 8, 4],\n    padding: [8, 10],\n    verticalAlign: 'middle',\n\n    '& svg': {\n      display: 'block'\n    }\n}\n\nconst useStyles = createUseStyles({\n  button: {\n    ...buttonCss\n  },\n  buttonTransition: {\n    '&-enter': {\n      transform: 'scale(0)'\n    },\n\n    '&-enter-active': {\n      transform: 'scale(1)',\n      transition: `transform ${TRANSITION_TIME}ms cubic-bezier(0.34, 1.56, 0.64, 1)`\n    },\n\n    '&-enter-done': {\n      transform: 'scale(1)'\n    },\n\n    '&-exit': {\n      transform: 'scale(1)'\n    },\n\n    '&-exit-active': {\n      transform: 'scale(0)',\n      transition: `transform ${TRANSITION_TIME}ms cubic-bezier(0.34, 1.56, 0.64, 1)`\n    }\n  },\n  groupedButton: {\n    ...buttonCss,\n    borderRight: 'solid 2px #f7f7f7',\n    marginLeft: 0,\n    marginRight: 0,\n    opacity: 0.4,\n    position: 'relative',\n\n    '&:first-of-type': {\n      borderRadius: [8, 0, 0, 8],\n    },\n\n    '&:last-of-type': {\n      borderRadius: [0, 8, 8, 0],\n      borderRight: 0,\n    },\n  },\n  groupedButtonActive: {\n    opacity: 1\n  },\n  groupedButtons: {\n    display: 'inline-block',\n    margin: [0, 8],\n  }\n});\n\nexport default function PlayerControls(props: Props) {\n  const classes = useStyles();\n  const [user, setUser] = useUserState();\n\n  function onModeLine() {\n    setUser({\n      ...user,\n      mode: Mode.Line\n    })\n  }\n\n  function onModeWord() {\n    setUser({\n      ...user,\n      mode: Mode.Word\n    })\n  }\n\n  return (\n    <>\n      <Link className={classes.button} to={Routes.Dashboard}><FiGrid /></Link>\n      <button className={classes.button} onClick={props.onRewind}><FiRewind /></button>\n      <button className={classes.button} onClick={props.onPlayPause}>\n        <SwitchTransition>\n          <CSSTransition\n            key={props.isPlaying ? 'true' : 'false'}\n            timeout={TRANSITION_TIME}\n            classNames={classes.buttonTransition}\n          >\n            {props.isPlaying ? <FiPause /> : <FiPlay />}\n          </CSSTransition>\n        </SwitchTransition>\n      </button>\n      <button className={classes.button} onClick={props.onFastForward}><FiFastForward /></button>\n      <button className={classes.button} onClick={props.onRestart}><FiRotateCcw /></button>\n      <div className={classes.groupedButtons}>\n        <button className={`${classes.groupedButton}${user.mode === Mode.Line ? ` ${classes.groupedButtonActive}` : ''}`} onClick={onModeLine}>Line</button>\n        <button className={`${classes.groupedButton}${user.mode === Mode.Word ? ` ${classes.groupedButtonActive}` : ''}`} onClick={onModeWord}>Word</button>\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { ReaderDocument } from '../state/user';\nimport { documentToLines, getActiveLines } from '../utils/document';\nimport { useReadZoneEffect } from './readZoneEffect';\n\ntype Props = {\n  document: ReaderDocument;\n  isPlaying: boolean;\n  onComplete: () => void;\n  speed: number;\n}\n\ntype Styles = {\n  lineProgress: number;\n}\n\nconst useStyles = createUseStyles({\n  readZone: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  readZoneCentered: {\n    border: 0,\n    borderLeft: 'solid 2px #33333333',\n    display: 'inline-block',\n    minWidth: 728,\n    padding: [16, 32]\n  },\n  textLine: {\n    fontSize: 24,\n    margin: [8, 0],\n    position: 'relative',\n\n    '&::after': {\n      backdropFilter: 'blur(2px)',\n      background: '#0000000f',\n      bottom: 0,\n      boxShadow: '3px 3px 10px #00000011',\n      content: '\"\"',\n      display: 'block',\n      left: 0,\n      height: '100%',\n      position: 'absolute',\n      transform: ({ lineProgress }: Styles) => `scaleX(${lineProgress / 100})`,\n      transformOrigin: 'left',\n      transition: 'transform 20ms linear',\n      width: '100%',\n      zIndex: -1\n    }\n  },\n  paraTextLine: {\n    fontSize: 24,\n    margin: [8, 0],\n    opacity: 0.1\n  }\n});\n\nexport default function ReadZone({\n  document,\n  isPlaying,\n  onComplete,\n  speed\n}: Readonly<Props>) {\n  const { content, readerPosition } = document;\n\n  const lines = documentToLines(content);\n\n  const { activeLines, lineProgress } = getActiveLines(lines, readerPosition);\n\n  useReadZoneEffect(document, isPlaying, onComplete, speed)\n\n  const classes = useStyles({ lineProgress });\n\n  return (\n    <section>\n      <div className={classes.readZone}>\n        <div className={classes.readZoneCentered}>\n          <p className={classes.paraTextLine}>{ activeLines[0] }</p>\n          <p className={classes.textLine}>{ activeLines[1] }</p>\n          <p className={classes.paraTextLine}>{ activeLines[2] }</p>\n        </div>\n      </div>\n    </section>\n  );\n}\n","import { useEffect } from 'react';\nimport { ReaderDocument, useUserState } from '../state/user';\n\nexport function useReadZoneEffect(\n  document: ReaderDocument,\n  isPlaying: boolean,\n  onComplete: () => void, \n  speed: number\n) {\n  const [user, setUser] = useUserState();\n\n  useEffect(() => {\n    if (!isPlaying || typeof window === 'undefined') return;\n    if (document.readerPosition >= document.content.length) onComplete();\n  \n    const timeout = window.setTimeout(() => {\n      const updateDocuments = [...user.documents];\n      const activeDocumentIndex = updateDocuments.indexOf(updateDocuments.find((updateDocument) => updateDocument.id === document.id)!);\n      updateDocuments[activeDocumentIndex] = {\n        ...updateDocuments[activeDocumentIndex],\n        readerPosition: updateDocuments[activeDocumentIndex].readerPosition + 1\n      };\n      setUser({\n        ...user,\n        documents: updateDocuments\n      });\n    }, speed * 1000);\n\n    return () => window.clearTimeout(timeout);\n  }, [document, isPlaying, user, setUser]);\n}","import React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { ReaderDocument } from '../state/user';\nimport { documentToWords, getActiveLines } from '../utils/document';\nimport { useReadZoneEffect } from './readZoneEffect';\n\ntype Props = {\n  document: ReaderDocument;\n  isPlaying: boolean;\n  onComplete: () => void;\n  speed: number;\n}\n\nconst useStyles = createUseStyles({\n  readZone: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  readZoneCentered: {\n    border: 0,\n    borderLeft: 'solid 2px #33333333',\n    display: 'inline-block',\n    minWidth: 300,\n    padding: [16, 32]\n  },\n  textLine: {\n    fontSize: 24,\n    margin: [8, 0],\n    position: 'relative',\n  },\n  paraTextLine: {\n    fontSize: 24,\n    margin: [8, 0],\n    opacity: 0.1\n  }\n});\n\nexport default function ReadZoneSingleWord({\n  document,\n  isPlaying,\n  onComplete,\n  speed\n}: Readonly<Props>) {\n  const { content, readerPosition } = document;\n\n  const lines = documentToWords(content);\n\n  const { activeLines } = getActiveLines(lines, readerPosition);\n\n  useReadZoneEffect(document, isPlaying, onComplete, speed)\n\n  const classes = useStyles();\n\n  return (\n    <section>\n      <div className={classes.readZone}>\n        <div className={classes.readZoneCentered}>\n          <p className={classes.textLine}>{ activeLines[1] }</p>\n        </div>\n      </div>\n    </section>\n  );\n}\n","import React, { useState } from 'react';\nimport { navigate } from 'gatsby';\nimport { createUseStyles } from 'react-jss';\nimport { Routes } from '../utils/routes';\nimport { Mode, useUserState } from '../state/user';\nimport { getDocument } from '../utils/document';\nimport PlayerControls from '../components/PlayerControls';\nimport ReadZone from '../components/ReadZone';\nimport ReadZoneSingleWord from '../components/ReadZoneSingleWord';\n\nconst useStyles = createUseStyles({\n  '@global': {\n    body: {\n      background: 'linear-gradient(125deg, #ffffff, #f0f0f0) !important'\n    }\n  },\n  controlsContainer: {\n    margin: [32, 0, 160],\n    opacity: 0.1,\n    padding: 16,\n    textAlign: 'center',\n    transition: 'opacity 300ms ease-in-out',\n\n    '&:hover, &:focus': {\n      opacity: 1\n    }\n  }\n});\n\nfunction getReadZoneComponent(mode: Mode) {\n  switch (mode) {\n    case Mode.Line:\n      return ReadZone;\n    case Mode.Word:\n      return ReadZoneSingleWord;\n    default:\n      throw new Error(`Reading mode \"${mode}\" not recognised.`)\n  }\n}\n\nexport default function Reader() {\n  const classes = useStyles();\n  const [user, setUser] = useUserState();\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const document = getDocument(user);\n\n  if (!document) {\n    console.error(\"Couldn't find document with this ID\");\n    if (typeof window !== 'undefined') navigate(Routes.Dashboard);\n    return <main />;\n  }\n\n  function onPlayPause() {\n    setIsPlaying(!isPlaying);\n  }\n\n  function onRewind() {\n    const updateDocuments = [...user.documents];\n    updateDocuments[updateDocuments.indexOf(document!)] = {\n      ...updateDocuments[updateDocuments.indexOf(document!)],\n      readerPosition: Math.max(document!.readerPosition - 100, 0)\n    };\n    setUser({\n      ...user,\n      documents: updateDocuments\n    });\n  }\n\n  function onFastForward() {\n    const updateDocuments = [...user.documents];\n    updateDocuments[updateDocuments.indexOf(document!)] = {\n      ...updateDocuments[updateDocuments.indexOf(document!)],\n      readerPosition: Math.min(document!.readerPosition + 100, document!.content.length)\n    };\n    setUser({\n      ...user,\n      documents: updateDocuments\n    });\n  }\n\n  function onRestart() {\n    const updateDocuments = [...user.documents];\n    updateDocuments[updateDocuments.indexOf(document!)] = {\n      ...updateDocuments[updateDocuments.indexOf(document!)],\n      readerPosition: 0\n    };\n    setUser({\n      ...user,\n      documents: updateDocuments\n    });\n  }\n\n  const ReadZoneComponent = getReadZoneComponent(user.mode);\n\n  return (\n    <main>\n      <section className={classes.controlsContainer}>\n        <h1>{ document.name }</h1>\n        <PlayerControls\n          isPlaying={isPlaying}\n          onRewind={onRewind}\n          onPlayPause={onPlayPause}\n          onFastForward={onFastForward}\n          onRestart={onRestart}\n        />\n      </section>\n      <ReadZoneComponent\n        document={document}\n        isPlaying={isPlaying}\n        onComplete={onPlayPause}\n        speed={1 / user.readSpeed}\n      />\n    </main>\n  );\n}\n"],"names":["TRANSITION_TIME","buttonCss","backdropFilter","background","border","borderRadius","boxShadow","color","cursor","display","fontSize","margin","padding","verticalAlign","useStyles","createUseStyles","button","buttonTransition","transform","transition","groupedButton","borderRight","marginLeft","marginRight","opacity","position","groupedButtonActive","groupedButtons","PlayerControls","props","classes","user","setUser","useUserState","React","Link","className","to","Routes","Dashboard","FiGrid","onClick","onRewind","FiRewind","onPlayPause","SwitchTransition","CSSTransition","key","isPlaying","timeout","classNames","FiPause","FiPlay","onFastForward","FiFastForward","onRestart","FiRotateCcw","mode","Mode","Line","Word","readZone","justifyContent","readZoneCentered","borderLeft","minWidth","textLine","bottom","content","left","height","_ref","lineProgress","transformOrigin","width","zIndex","paraTextLine","ReadZone","_ref2","document","onComplete","speed","readerPosition","lines","documentToLines","activeLines","getActiveLines","useReadZoneEffect","useEffect","window","length","setTimeout","updateDocuments","_toConsumableArray","documents","activeDocumentIndex","indexOf","find","updateDocument","id","clearTimeout","ReadZoneSingleWord","documentToWords","body","controlsContainer","textAlign","Reader","setIsPlaying","useState","getDocument","console","error","navigate","ReadZoneComponent","Error","getReadZoneComponent","name","Math","max","min","readSpeed"],"sourceRoot":""}