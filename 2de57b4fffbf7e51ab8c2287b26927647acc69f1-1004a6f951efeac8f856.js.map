{"version":3,"file":"2de57b4fffbf7e51ab8c2287b26927647acc69f1-1004a6f951efeac8f856.js","mappings":"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","sources":["webpack://power-reader/./src/state/user.ts","webpack://power-reader/./src/utils/document.tsx","webpack://power-reader/./node_modules/dom-helpers/esm/removeClass.js","webpack://power-reader/./node_modules/react-transition-group/esm/CSSTransition.js","webpack://power-reader/./node_modules/dom-helpers/esm/addClass.js","webpack://power-reader/./node_modules/dom-helpers/esm/hasClass.js","webpack://power-reader/./node_modules/react-transition-group/esm/SwitchTransition.js","webpack://power-reader/./node_modules/react-transition-group/esm/config.js","webpack://power-reader/./node_modules/react-transition-group/esm/Transition.js","webpack://power-reader/./node_modules/react-transition-group/esm/TransitionGroupContext.js","webpack://power-reader/./node_modules/react-transition-group/esm/utils/reflow.js","webpack://power-reader/./node_modules/recoil-persist/dist/index.js","webpack://power-reader/./node_modules/uuid/dist/esm-browser/rng.js","webpack://power-reader/./node_modules/uuid/dist/esm-browser/regex.js","webpack://power-reader/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://power-reader/./node_modules/uuid/dist/esm-browser/validate.js","webpack://power-reader/./node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import { atom, useRecoilState } from 'recoil';\nimport { navigate } from 'gatsby';\nimport { Routes } from '../utils/routes';\nimport { v4 as uuidv4 } from 'uuid';\nimport { recoilPersist } from 'recoil-persist';\nconst { persistAtom } = recoilPersist();\n\nconst ATOM_KEY_USER = 'user';\n\nexport type ReaderDocument = {\n  id: string;\n  name: string;\n  content: string;\n  readerPosition: number;\n}\n\nexport type User = {\n  documents: ReaderDocument[];\n  firstName: string;\n  id: string;\n  readSpeed: number;\n}\n\nexport const userState = atom<User>({\n  key: ATOM_KEY_USER,\n  default: createUser({ firstName: '' }),\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport const useUserState = () => {\n  const currentUserState = useRecoilState(userState);\n\n  const [user] = currentUserState;\n\n  if (typeof window !== 'undefined' && !user.firstName) {\n    navigate(Routes.Introduction);\n  }\n\n  return currentUserState;\n}\n\ntype CreateUser = {\n  firstName: string;\n}\n\nexport function createUser({ firstName }: CreateUser) {\n  return {\n    documents: [],\n    firstName,\n    id: uuidv4(),\n    readSpeed: 60,\n  }\n}\n","import { User } from '../state/user';\n\nexport const MAX_DOCS_FOR_MULTI_DOC = 2;\n\nfunction snipFirstLine(document: string, maxLineLength: number): string[] {\n  for (let i = maxLineLength; i >= 0; i--) {\n    const finishedDocument = !document[i];\n    const unbrokenWordLongerThanMaxLength = i === 0;\n\n    if (finishedDocument) {\n      return [document.trim()];\n    } else if (unbrokenWordLongerThanMaxLength) {\n      return [document.substring(0, maxLineLength).trim(), ...snipFirstLine(document.substring(maxLineLength), maxLineLength)];\n    } else if (document[i] === ' ') {\n      return [document.substring(0, i).trim(), ...snipFirstLine(document.substring(i), maxLineLength)];\n    }\n  }\n\n  return [];\n}\n\nexport function documentToLines(document: string, maxLineLength: number = 60) {\n  return snipFirstLine(document, maxLineLength);\n}\n\ntype ActiveLines = {\n  activeLines: string[];\n  lineProgress: number;\n}\n\nexport function getActiveLines(lines: string[], readerPosition: number): ActiveLines {\n  let scanPosition = 0;\n  for (let i = 0; i < lines.length; i++) {\n    scanPosition += lines[i].length + 1; // The 1 is for the space at the end of the line\n    const foundPosition = scanPosition >= readerPosition;\n    if (foundPosition) {\n      const lineStart = scanPosition - (lines[i].length + 1);\n      const lineEnd = scanPosition;\n      const lineLength = lineEnd - lineStart;\n      const linePosition = readerPosition - lineStart;\n      return {\n        activeLines: [lines[i - 1] || ' ', lines[i], lines[i + 1] || ' '],\n        lineProgress: (linePosition / lineLength) * 100\n      };\n    }\n  }\n  throw new Error(`Couldn't find reading position in document`);\n}\n\nexport function getDocument(user: User) {\n  if (typeof window !== 'undefined') {\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    return user.documents.find(document => document.id === urlParams.get('id'));\n  }\n\n  return null;\n}\n\nexport function getMultiDocument(user: User) {\n  if (typeof window !== 'undefined') {\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    const ids = JSON.parse(urlParams.get('ids')!);\n    return user.documents.filter(document => ids.includes(document.id));\n  }\n\n  return null;\n}\n","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\nimport { forceReflow } from './utils/reflow';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      if (node) forceReflow(node);\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nvar _leaveRenders, _enterRenders;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ENTERED, ENTERING, EXITING } from './Transition';\nimport TransitionGroupContext from './TransitionGroupContext';\n\nfunction areChildrenDifferent(oldChildren, newChildren) {\n  if (oldChildren === newChildren) return false;\n\n  if (React.isValidElement(oldChildren) && React.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Enum of modes for SwitchTransition component\n * @enum { string }\n */\n\n\nexport var modes = {\n  out: 'out-in',\n  in: 'in-out'\n};\n\nvar callHook = function callHook(element, name, cb) {\n  return function () {\n    var _element$props;\n\n    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);\n    cb();\n  };\n};\n\nvar leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {\n  var current = _ref.current,\n      changeState = _ref.changeState;\n  return React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERING, null);\n    })\n  });\n}, _leaveRenders[modes.in] = function (_ref2) {\n  var current = _ref2.current,\n      changeState = _ref2.changeState,\n      children = _ref2.children;\n  return [current, React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERING);\n    })\n  })];\n}, _leaveRenders);\nvar enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {\n  var children = _ref3.children,\n      changeState = _ref3.changeState;\n  return React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  });\n}, _enterRenders[modes.in] = function (_ref4) {\n  var current = _ref4.current,\n      children = _ref4.children,\n      changeState = _ref4.changeState;\n  return [React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  }), React.cloneElement(children, {\n    in: true\n  })];\n}, _enterRenders);\n/**\n * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).\n * You can use it when you want to control the render between state transitions.\n * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.\n *\n * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.\n * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.\n *\n * **Note**: If you want the animation to happen simultaneously\n * (that is, to have the old child removed and a new child inserted **at the same time**),\n * you should use\n * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)\n * instead.\n *\n * ```jsx\n * function App() {\n *  const [state, setState] = useState(false);\n *  return (\n *    <SwitchTransition>\n *      <CSSTransition\n *        key={state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\n *        classNames='fade'\n *      >\n *        <button onClick={() => setState(state => !state)}>\n *          {state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        </button>\n *      </CSSTransition>\n *    </SwitchTransition>\n *  );\n * }\n * ```\n *\n * ```css\n * .fade-enter{\n *    opacity: 0;\n * }\n * .fade-exit{\n *    opacity: 1;\n * }\n * .fade-enter-active{\n *    opacity: 1;\n * }\n * .fade-exit-active{\n *    opacity: 0;\n * }\n * .fade-enter-active,\n * .fade-exit-active{\n *    transition: opacity 500ms;\n * }\n * ```\n */\n\nvar SwitchTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(SwitchTransition, _React$Component);\n\n  function SwitchTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      status: ENTERED,\n      current: null\n    };\n    _this.appeared = false;\n\n    _this.changeState = function (status, current) {\n      if (current === void 0) {\n        current = _this.state.current;\n      }\n\n      _this.setState({\n        status: status,\n        current: current\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = SwitchTransition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n  };\n\n  SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    if (props.children == null) {\n      return {\n        current: null\n      };\n    }\n\n    if (state.status === ENTERING && props.mode === modes.in) {\n      return {\n        status: ENTERING\n      };\n    }\n\n    if (state.current && areChildrenDifferent(state.current, props.children)) {\n      return {\n        status: EXITING\n      };\n    }\n\n    return {\n      current: React.cloneElement(props.children, {\n        in: true\n      })\n    };\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        mode = _this$props.mode,\n        _this$state = this.state,\n        status = _this$state.status,\n        current = _this$state.current;\n    var data = {\n      children: children,\n      current: current,\n      changeState: this.changeState,\n      status: status\n    };\n    var component;\n\n    switch (status) {\n      case ENTERING:\n        component = enterRenders[mode](data);\n        break;\n\n      case EXITING:\n        component = leaveRenders[mode](data);\n        break;\n\n      case ENTERED:\n        component = current;\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: {\n        isMounting: !this.appeared\n      }\n    }, component);\n  };\n\n  return SwitchTransition;\n}(React.Component);\n\nSwitchTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Transition modes.\n   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.\n   * `in-out`: New element transitions in first, then when complete, the current element transitions out.\n   *\n   * @type {'out-in'|'in-out'}\n   */\n  mode: PropTypes.oneOf([modes.in, modes.out]),\n\n  /**\n   * Any `Transition` or `CSSTransition` component.\n   */\n  children: PropTypes.oneOfType([PropTypes.element.isRequired])\n} : {};\nSwitchTransition.defaultProps = {\n  mode: modes.out\n};\nexport default SwitchTransition;","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import React from 'react';\nexport default React.createContext(null);","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.recoilPersist = void 0;\n/**\n * Recoil module to persist state to storage\n *\n * @param config Optional configuration object\n * @param config.key Used as key in local storage, defaults to `recoil-persist`\n * @param config.storage Local storage to use, defaults to `localStorage`\n */\nconst recoilPersist = (config = {}) => {\n    if (typeof window === 'undefined') {\n        return {\n            persistAtom: () => { },\n        };\n    }\n    const { key = 'recoil-persist', storage = localStorage } = config;\n    const persistAtom = ({ onSet, node, trigger, setSelf }) => {\n        if (trigger === 'get') {\n            const state = getState();\n            if (typeof state.then === 'function') {\n                state.then((s) => {\n                    if (s.hasOwnProperty(node.key)) {\n                        setSelf(s[node.key]);\n                    }\n                });\n            }\n            if (state.hasOwnProperty(node.key)) {\n                setSelf(state[node.key]);\n            }\n        }\n        onSet(async (newValue, _, isReset) => {\n            const state = getState();\n            if (typeof state.then === 'function') {\n                state.then((s) => updateState(newValue, s, node.key, isReset));\n            }\n            else {\n                updateState(newValue, state, node.key, isReset);\n            }\n        });\n    };\n    const updateState = (newValue, state, key, isReset) => {\n        if (isReset) {\n            delete state[key];\n        }\n        else {\n            state[key] = newValue;\n        }\n        setState(state);\n    };\n    const getState = () => {\n        const toParse = storage.getItem(key);\n        if (toParse === null || toParse === undefined) {\n            return {};\n        }\n        if (typeof toParse === 'string') {\n            return parseState(toParse);\n        }\n        if (typeof toParse.then === 'function') {\n            return toParse.then(parseState);\n        }\n        return {};\n    };\n    const parseState = (state) => {\n        if (state === undefined) {\n            return {};\n        }\n        try {\n            return JSON.parse(state);\n        }\n        catch (e) {\n            console.error(e);\n            return {};\n        }\n    };\n    const setState = (state) => {\n        try {\n            if (typeof storage.mergeItem === 'function') {\n                storage.mergeItem(key, JSON.stringify(state));\n            }\n            else {\n                storage.setItem(key, JSON.stringify(state));\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n    };\n    return { persistAtom };\n};\nexports.recoilPersist = recoilPersist;\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;"],"names":["persistAtom","recoilPersist","userState","atom","key","default","createUser","firstName","effects_UNSTABLE","useUserState","currentUserState","useRecoilState","user","window","navigate","Routes","Introduction","_ref","documents","id","uuidv4","readSpeed","MAX_DOCS_FOR_MULTI_DOC","snipFirstLine","document","maxLineLength","i","unbrokenWordLongerThanMaxLength","trim","substring","concat","_toConsumableArray","documentToLines","getActiveLines","lines","readerPosition","scanPosition","length","lineStart","lineLength","linePosition","activeLines","lineProgress","Error","getDocument","queryString","location","search","urlParams","URLSearchParams","find","get","getMultiDocument","ids","JSON","parse","filter","includes","replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","node","classes","split","forEach","c","className","element","classList","remove","setAttribute","baseVal","CSSTransition","_React$Component","_this","_len","arguments","args","Array","_key","call","apply","this","appliedClasses","appear","enter","exit","onEnter","maybeNode","maybeAppearing","_this$resolveArgument","resolveArguments","appearing","removeClasses","addClass","props","onEntering","_this$resolveArgument2","type","onEntered","_this$resolveArgument3","onExit","onExiting","onExited","nodeRef","current","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","_proto","prototype","phase","add","contains","indexOf","hasClass","_addClass","_this$appliedClasses$","base","active","done","render","_this$props","Transition","defaultProps","propTypes","_leaveRenders","_enterRenders","modes","callHook","name","cb","_element$props","leaveRenders","changeState","in","_ref2","children","enterRenders","_ref3","_ref4","SwitchTransition","state","status","appeared","setState","componentDidMount","getDerivedStateFromProps","mode","oldChildren","newChildren","component","_this$state","data","Provider","value","isMounting","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","context","initialStatus","appearStatus","unmountOnExit","mountOnEnter","nextCallback","prevState","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","timeout","undefined","mounting","performEnter","performExit","_this2","timeouts","enterTimeout","config","safeSetState","onTransitionEnd","_this3","cancel","nextState","callback","setNextCallback","_this4","event","handler","doesNotHaveTimeoutOrListener","addEndListener","maybeNextCallback","setTimeout","childProps","TransitionGroupContext","only","noop","contextType","forceReflow","scrollTop","exports","storage","localStorage","updateState","newValue","isReset","getState","toParse","getItem","parseState","then","e","console","error","mergeItem","stringify","setItem","onSet","trigger","setSelf","s","hasOwnProperty","async","_","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","uuid","test","byteToHex","push","toString","substr","arr","offset","toLowerCase","TypeError","options","buf","rnds","random"],"sourceRoot":""}